// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    
    // Initialize RAM4K Chips
    RAM4K(in = in, load = chipOne, address = address[0..11], out = chipOneOut);
    RAM4K(in = in, load = chipTwo, address = address[0..11], out = chipTwoOut);
    RAM4K(in = in, load = chipThree, address = address[0..11], out = chipThreeOut);
    RAM4K(in = in, load = chipFour, address = address[0..11], out = chipFourOut);

    // Combinational logic to choose RAM4K to write to
    DMux4Way(in = load, sel = address[12..13], a = chipOne, b = chipTwo,
            c = chipThree, d = chipFour);

    // Combinational logic to choose RAM4K to read from
    Mux4Way16(a = chipOneOut, b = chipTwoOut, c = chipThreeOut, 
            d = chipFourOut, sel = address[12..13], out = out);
}